Migrating to ccxt 1.11.150
==========================

Git setup
---------
$ git remote add upstream git@github.com:ccxt/ccxt 
$ git fetch upstream

Merge Process
-------------
We pull from upstream into branch <master>.
We make local edits in branch <mjm>.
Occasionally we pull from upstream to <master> and merge from <master> to <mjm>.
$ git checkout mjm
$ git commit -m "..."
$ git checkout master
* Show differences from <upstream>: git diff master upstream/master
$ git pull https://github.com/ccxt/ccxt master
* If conficts (shouldn't be any as we aren't editing on master), resolve and commit.
$ git push origin master
$ git checkout mjm
$ git merge master
* Review conflicts, reimplement patches as needed.
* Show differences from <master>: git diff master
$ git commit -m "..."


Verbose logging
---------------
base/Exchange.js fetch()
base/Exchange.js handleRestResponse()
  origin: calls console.log()
  patch: base/Exchange.js: add this.verboseLogger, call that in same place
         also disables "details" explanation in logging
js/bitfinex.js sign()
  patch: log query params before they are encoded into header

Nonce
-----
origin: uses second() or millisecond(), no guarantee of uniqueness/monotonicity
patch: use millisecond() but increment until > previous

Symbol names
------------
BCH|BCC, QTM|QTUM, IOT|IOTA
origin: BCH is preferred code for Bitcoin Cash
        commonCurrencyCode() handles BCC|BCH, XBT|BTC
        bitfinex.js handles DSH, QTM, IOT, DAT, including in fetchBalance() etc
        bittrex.js handles BCH|BCC
        liqui.js handles BCH|BCC
patch: no changes, handle any exceptional cases outside of ccxt

Liqui "no orders" response
--------------------------
origin: throws error if error='no orders'
patch: edit liqui.js handleErrors() to tolerate

Binance URLS
------------
Change from www.binance.com to us.binance.com everywhere.

Binance fetchTickers()
----------------------
Default implementation filters out ticker data for symbols not requested.
This can cause arby to repeatedly poll fetchTickers() on startup.
Easiest solution: do not filter.

Bibox fetchTickers()
--------------------
Default implementation filters out ticker data for symbols not requested.
This can cause arby to repeatedly poll fetchTickers() on startup.
Easiest solution: do not filter.

Bibox fetchMyTrades()
---------------------
Added parseMyTrade() for fetchMyTrades().

Huobi api config
----------------
Added entry for query/deposit-withdraw.

Huobi URLs
----------
Previously: Change huobipro.com => huobi.pro
Reverted: Back to huobipro.com. Often saw periods (many minutes long) of all REST requests (including order placement) timing out on huobi.pro.
